#   ------------------------------------------------------------
#   file:   ~/.tmux.conf
#
#   1.  PREFERENCES
#   2.  KEY MAPPINGS
#   3.  APPEARANCE
#
#   NOTES:
#
#       On remote host create session:
#           tmux -S /tmp/tmux-session-foo new -s foo
#
#       Attach remote session (deatach mode drop all other attached sessions):
#           ssh remote@host -t tmux -S /tmp/tmux-session-foo attach-session -d -t foo
#
#    Bash helper functions:
#
#       # Create new session or attach existing session (detach mode drop all other attached sessions):
#       tm() {
#           name=${1:-${HOSTNAME}}
#           tmux -f ~/.tmux.conf -S /tmp/tmux-session-"$name" new -s "$name" \
#               || tmux -f ~/.tmux.conf -S /tmp/tmux-session-"$name" attach-session -d -t "$name"
#       }
#
#       # Create new session or attach existing session (not detach other sessions - collaboration mode):
#       tma() {
#           name=${1:-${HOSTNAME}}
#           tmux -f ~/.tmux.conf -S /tmp/tmux-session-"$name" new -s "$name" \
#               || tmux -f ~/.tmux.conf -S /tmp/tmux-session-"$name" attach-session -t "$name"
#       }
#
# vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:fdm=indent:fdn=1:ft=conf:
#   ------------------------------------------------------------

#   -------------------------------
#   1.  PREFERENCES
#   -------------------------------
# Colors
set -g default-terminal "screen-256color"

# Unbind the default tmux command prefix, CTRL+b.
unbind C-b

# Use CTRL+a as our tmux command prefix.
set -g prefix C-a
bind-key C-a send-prefix

# Lower the default tmux delay, this makes tmux more responsive.
set -s escape-time 1

# Set XTerm key bindings
setw -g xterm-keys on

# Count sessions start at 1
set -g base-index 1

#   -------------------------------
#   2.  KEY MAPPINGS
#   -------------------------------
# Use vim bindings
setw -g mode-keys vi
# for vim
set-window-option -g xterm-keys on
# vi-like bindings for navigating a buffer in a window
set-window-option -g mode-keys vi

# Remap window navigation to vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# Use Vim movement key mappings (uppercase) for resizing panes.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# PREFIX \: Create a new vertical pane.
# bind \ split-window -h

# PREFIX -: Create a new horizontal pane.
# bind - split-window -v

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# toggle last window like screen
bind-key C-b last-window

# Set reload key to r
bind r source-file ~/.tmux.conf

# Vertically
# Usually assigned to: C-b M-2
bind-key = select-layout even-vertical

# Horizontally
# Usually assigned to: C-b M-1
bind-key | select-layout even-horizontal

# Open man page in new window
bind-key M command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# Create custom layout
bind-key W source-file ~/_configs/_dotfilesX/_tmux_workon

# Enable UTF8 characters in the status bar.
# set -g status-utf8 on

# Only resize the screen size if the smaller screen user has their
# window
# active. This way my screen won't be resized to an incredibly small
# window
# unnecessarily.
#setw -g aggressive-resize on
set-window-option -g aggressive-resize on

# quick view of processes
bind '~' split-window -v -p 50 "htop"

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# toggle last window like screen
bind-key C-b last-window

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i"

#   -------------------------------
#   3.  APPEARANCE
#   -------------------------------
# border colour
set -g pane-border-style fg=white,bg=default
set -g pane-active-border-style fg=cyan,bg=default

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux:#I [ #W ]"

set -g window-status-format "#I:#W"
set -g window-status-current-format "#I:#W"

# Center our windows in the status bar display.
set -g status-justify centre

# Disable window activity notifications in tmux windows.
setw -g monitor-activity off

# Refresh the status bar every 10 seconds.
set -g status-interval 10

# default statusbar colors
set -g status-style fg=white,bg=default

# set bell colours
set -g window-status-bell-style fg=red,bg=default,bright

# command/message line colors
set -g message-command-style fg=white,bg=black,bright

# Statusbar if tmux runs in X
set -g status-style bright
set -g status-left-length 50
set -g status-right-length 80

# default window title colors
set-window-option -g window-status-style fg=black,bg=default,bright

# active window title colours
set-window-option -g window-status-activity-style fg=white,bg=default,bright

# Active window
set-window-option -g window-status-current-style fg=cyan,bg=default,bright

set -g status-left "#[fg=red] #H #[fg=black]| #[fg=white]%k:%M:%S #[fg=black, bright]| #[fg=white]up #(uptime | cut -d \" \" -f4-5 | cut -d\",\" -f1)"
set -g status-right " #[fg=magenta]#(cut -d \" \" -f1-3 /proc/loadavg)#[fg=black,bright] |#[fg=blue] tun0 #(ip addr show dev tun0 | grep "inet[^6]" | awk '{print $2} ')"
